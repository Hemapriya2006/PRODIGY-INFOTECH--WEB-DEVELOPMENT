index1.html:


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Enhanced Stopwatch</title>
  <link rel="stylesheet" href="style1.css">
</head>
<body>

  <!-- Theme Toggle Button -->
  <div id="themeToggle" class="theme-toggle" onclick="toggleTheme()">ðŸŒ™</div>
  
  <div class="stopwatch-container">
    <h1>Stopwatch</h1>
    
    <!-- Time Display -->
    <div class="time-display">
      <span id="hours">00</span>:<span id="minutes">00</span>:<span id="seconds">00</span>:<span id="milliseconds">00</span>
    </div>

    <!-- Control Buttons -->
    <div class="controls">
      <button id="startBtn" onclick="startStopwatch()">Start</button>
      <button id="pauseBtn" onclick="pauseStopwatch()" disabled>Pause</button>
      <button id="resetBtn" onclick="resetStopwatch()">Reset</button>
    </div>

    <!-- Lap Times Section -->
    <div class="laps">
      <h3>Lap Times</h3>
      <ul id="lapList"></ul>
      <button id="lapBtn" onclick="recordLap()">Lap</button>
    </div>
  </div>

  <script src="script1.js"></script>
</body>
</html>


style1.css:

body {
    font-family: 'Arial', sans-serif;
    background-color: #f7f7f7;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    transition: background-color 0.3s, color 0.3s;
  }
  
  .stopwatch-container {
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    text-align: center;
    width: 300px;
    transition: background-color 0.3s;
  }
  
  h1 {
    font-size: 2rem;
    margin-bottom: 20px;
  }
  
  .time-display {
    font-size: 3rem;
    font-weight: bold;
    margin-bottom: 20px;
  }
  
  .controls button {
    padding: 10px 20px;
    font-size: 1rem;
    margin: 5px;
    border: none;
    background-color: #4CAF50;
    color: white;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s, transform 0.2s;
  }
  
  .controls button:disabled {
    background-color: #ccc;
  }
  
  .controls button:hover {
    background-color: #45a049;
    transform: scale(1.1);
  }
  
  .laps {
    margin-top: 20px;
  }
  
  #lapList {
    list-style-type: none;
    padding-left: 0;
    margin-top: 10px;
  }
  
  #lapList li {
    font-size: 1rem;
    margin: 5px 0;
  }
  
  #lapBtn {
    padding: 10px 20px;
    font-size: 1rem;
    border: none;
    background-color: #ff4081;
    color: white;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s, transform 0.2s;
  }
  
  #lapBtn:hover {
    background-color: #f50057;
    transform: scale(1.1);
  }
  
  .theme-toggle {
    position: absolute;
    top: 20px;
    right: 20px;
    cursor: pointer;
    font-size: 1.5rem;
    z-index: 10;
  }
  
  .dark-theme {
    background-color: #121212;
    color: white;
  }
  
  .dark-theme .stopwatch-container {
    background-color: #1e1e1e;
  }
  
  .dark-theme .controls button {
    background-color: #6200ea;
  }
  
  .dark-theme .controls button:hover {
    background-color: #3700b3;
  }
  
  .dark-theme #lapBtn {
    background-color: #ff4081;
  }
  
  .dark-theme #lapBtn:hover {
    background-color: #f50057;
  }
  
  script1.js:

let stopwatchInterval;
let isRunning = false;
let hours = 0;
let minutes = 0;
let seconds = 0;
let milliseconds = 0;
let laps = [];
function startStopwatch() {
  isRunning = true;
  document.getElementById('startBtn').disabled = true;
  document.getElementById('pauseBtn').disabled = false;
  playSound('start'); // Play start sound
  
  stopwatchInterval = setInterval(updateTime, 10); // Update every 10ms
}

function pauseStopwatch() {
  isRunning = false;
  document.getElementById('startBtn').disabled = false;
  document.getElementById('pauseBtn').disabled = true;
  playSound('pause'); // Play pause sound
  
  clearInterval(stopwatchInterval);
}

function resetStopwatch() {
  isRunning = false;
  hours = 0;
  minutes = 0;
  seconds = 0;
  milliseconds = 0;
  clearInterval(stopwatchInterval);
  updateDisplay();
  playSound('reset'); // Play reset sound
  
  document.getElementById('startBtn').disabled = false;
  document.getElementById('pauseBtn').disabled = true;
  document.getElementById('lapList').innerHTML = ''; // Clear laps
}

function updateTime() {
  milliseconds++;
  if (milliseconds >= 100) {
    milliseconds = 0;
    seconds++;
  }

  if (seconds >= 60) {
    seconds = 0;
    minutes++;
  }

  if (minutes >= 60) {
    minutes = 0;
    hours++;
  }

  updateDisplay();
}

function updateDisplay() {
  document.getElementById('hours').textContent = formatTime(hours);
  document.getElementById('minutes').textContent = formatTime(minutes);
  document.getElementById('seconds').textContent = formatTime(seconds);
  document.getElementById('milliseconds').textContent = formatTime(milliseconds);
}

function formatTime(unit) {
  return unit < 10 ? '0' + unit : unit;
}

function recordLap() {
  if (isRunning) {
    const lapTime = `${formatTime(hours)}:${formatTime(minutes)}:${formatTime(seconds)}:${formatTime(milliseconds)}`;
    laps.push(lapTime);

    // Display lap time with a color
    const lapList = document.getElementById('lapList');
    const lapItem = document.createElement('li');
    lapItem.textContent = `Lap ${laps.length}: ${lapTime}`;
    lapItem.style.color = getRandomColor(); // Assign random color for each lap
    lapList.appendChild(lapItem);
  }
}

function playSound(action) {
  const audio = new Audio(`sounds/${action}.mp3`);
  audio.play();
}

function toggleTheme() {
  document.body.classList.toggle('dark-theme');
  const themeIcon = document.getElementById('themeToggle');
  if (document.body.classList.contains('dark-theme')) {
    themeIcon.textContent = 'ðŸŒ•'; // Change to sun icon for light theme
  } else {
    themeIcon.textContent = 'ðŸŒ™'; // Change to moon icon for dark theme
  }
}

function getRandomColor() {
  const letters = '0123456789ABCDEF';
  let color = '#';
  for (let i = 0; i < 6; i++) {
    color += letters[Math.floor(Math.random() * 16)];
  }
  return color;
}
